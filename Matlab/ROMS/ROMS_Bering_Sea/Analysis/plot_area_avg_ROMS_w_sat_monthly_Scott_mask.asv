%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Compare ROMS output through area-averaged with Satellite
% by applying Scott's mask
%
% J. Jung
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear; clc; close all

vari_str = 'salt';
yyyy_all = 2018:2022;
mm_all = 1:12;
depth_shelf = 200; % m
layer = 45;
num_sat = 5;

region = 'eoshelf';
mask_Scott = load('/data/sdurski/ROMS_Setups/Initial/Bering_Sea/BSf_region_polygons.mat');
indbsb = mask_Scott.indbsb;
%indshelf = mask_Scott.indshelf;
indshelf = eval(['mask_Scott.ind', region]);
indBS = [indbsb; indshelf'];
[row,col] = ind2sub([1460, 957], indBS);
indmask = sub2ind([957, 1460], col, row); % transpose

isice = 1;
aice_value = 0.4;

switch vari_str
    case 'salt'
        ylimit_shelf = [30.5 35];
        ylimit_basin = [32.2 34.0];
        climit = [31.5 33.5];
        unit = 'g/kg';
    case 'temp'
        climit = [0 20];
        unit = '^oC';
end

% Model
filepath_all = ['/data/jungjih/ROMS_BSf/Output/Multi_year/'];
case_control = 'Dsm2_spng';
filepath_control = [filepath_all, case_control, '/monthly/'];

% Load grid information
g = grd('BSf');
lon = g.lon_rho;
lat = g.lat_rho;
h = g.h;
dx = 1./g.pm; dy = 1./g.pn;

mask = g.mask_rho./g.mask_rho;
area = dx.*dy.*mask;

mask_ind = NaN(size(mask));
mask_ind(indmask) = 1;
mask = mask.*mask_ind;
area = area.*mask_ind;

index_shelf = find(h < depth_shelf);
index_basin = find(h > depth_shelf);

timenum_all = zeros(length(yyyy_all)*length(mm_all),1);
vari_control_shelf = zeros(length(yyyy_all)*length(mm_all),1);
vari_control_basin = zeros(length(yyyy_all)*length(mm_all),1);
vari_sat_shelf = zeros(num_sat, length(yyyy_all)*length(mm_all));
vari_sat_basin = zeros(num_sat, length(yyyy_all)*length(mm_all));
for yi = 1:length(yyyy_all)
    yyyy = yyyy_all(yi); ystr = num2str(yyyy);

    % Satellite SSS
    % RSS SMAP v5.3 (https://catalog.data.gov/dataset/rss-smap-level-3-sea-surface-salinity-standard-mapped-image-8-day-running-mean-v5-0-valida-ce1a1)
    filepath_RSS_70 = ['/data/jungjih/Observations/Satellite_SSS/Global/RSS/v5.3/monthly/', ystr, '/'];
    filepath_RSS_40 = filepath_RSS_70;
    % JPL SMAP v5.0 (https://podaac.jpl.nasa.gov/dataset/SMAP_JPL_L3_SSS_CAP_8DAY-RUNNINGMEAN_V5)
    %filepath_JPL = ['/data/jungjih/Observations/Satellite_SSS/BS/JPL/monthly/'];
    % CEC SMOS v9.0
    filepath_CEC = ['/data/jungjih/Observations/Satellite_SSS/Global/CEC/v9/monthly/'];
    % OISSS L4 v2.0 (https://podaac.jpl.nasa.gov/dataset/OISSS_L4_multimission_7day_v2)
    filepath_OISSS = ['/data/jungjih/Observations/Satellite_SSS/OISSS_v2/monthly/'];
    % CMEMS Multi Observation Global Ocean SSS (https://data.marine.copernicus.eu/product/MULTIOBS_GLO_PHY_S_SURFACE_MYNRT_015_013/description)
    filepath_CMEMS = ['/data/jungjih/Observations/Satellite_SSS/Global/CMEMS/monthly/', ystr, '/'];
    filepaths_sat = {filepath_RSS_70, filepath_RSS_40, filepath_CEC, filepath_OISSS, filepath_CMEMS};

    lons_sat = {'lon', 'lon', 'lon', 'longitude', 'lon'};
    lons_360ind = [360, 360, 180, 180, 360];
    lats_sat = {'lat', 'lat', 'lat', 'latitude', 'lat'};
    varis_sat = {'sss_smap', 'sss_smap_40km', 'SSS', 'sss', 'sos'};
    titles_sat = {'RSS SMAP L3 SSS v5.3 (70 km)', 'RSS SMAP L3 SSS v5.3 (40 km)', 'CEC SMOS L3 SSS v9.0', 'ESR OISSS L4 v2.0', 'CMEMS Multi Observation L4 SSS'};

    for mi = 1:length(mm_all)
        mm = mm_all(mi); mstr = num2str(mm, '%02i');

        filepattern_control = fullfile(filepath_control,(['*',ystr,mstr,'*.nc']));
        filename_control = dir(filepattern_control);
        if ~isempty(filename_control)
            file_control = [filepath_control, filename_control.name];

            vari_control = ncread(file_control,vari_str,[1 1 layer 1],[Inf Inf 1 1])';
            if isice == 1
                try
                    aice_mask = ncread(file_control,'aice')';
                    aice_mask(aice_mask >= aice_value) = NaN;
                    aice_mask(aice_mask < aice_value) = 1;
                    mask_with_ice = mask.*aice_mask;
                    area_with_ice = area.*aice_mask;

                    vari_control_shelf(12*(yi-1) + mi) = sum(vari_control(index_shelf).*area_with_ice(index_shelf), 'omitnan')./sum(area_with_ice(index_shelf), 'omitnan');
                    vari_control_basin(12*(yi-1) + mi) = sum(vari_control(index_basin).*area_with_ice(index_basin), 'omitnan')./sum(area_with_ice(index_basin), 'omitnan');
                catch
                    vari_control_shelf(12*(yi-1) + mi) = sum(vari_control(index_shelf).*area(index_shelf), 'omitnan')./sum(area(index_shelf), 'omitnan');
                    vari_control_basin(12*(yi-1) + mi) = sum(vari_control(index_basin).*area(index_basin), 'omitnan')./sum(area(index_basin), 'omitnan');
                end
            else
                vari_control_shelf(12*(yi-1) + mi) = sum(vari_control(index_shelf).*area(index_shelf), 'omitnan')./sum(area(index_shelf), 'omitnan');
                vari_control_basin(12*(yi-1) + mi) = sum(vari_control(index_basin).*area(index_basin), 'omitnan')./sum(area(index_basin), 'omitnan');
            end % isice

        else
            vari_control = NaN;
            vari_control_shelf(12*(yi-1) + mi) = NaN;
            vari_control_basin(12*(yi-1) + mi) = NaN;
        end

        timenum = datenum(yyyy,mm,15);
        time_title = datestr(timenum, 'mmm, yyyy');
        timenum_all(12*(yi-1) + mi) = timenum;

        % Satellite
        for si = 1:num_sat
            filepath_sat = filepaths_sat{si};
            filepattern1_sat = fullfile(filepath_sat, (['*', ystr, mstr, '*.nc']));
            filepattern2_sat = fullfile(filepath_sat, (['*', ystr, '_', mstr, '*.nc']));

            filename_sat = dir(filepattern1_sat);
            if isempty(filename_sat)
                filename_sat = dir(filepattern2_sat);
            end

            if isempty(filename_sat)
                vari_sat_shelf(si,12*(yi-1) + mi) = NaN;
                vari_sat_basin(si,12*(yi-1) + mi) = NaN;
                vari_sat_interp = NaN;
            else
                file_sat = [filepath_sat, filename_sat.name];
                lon_sat = double(ncread(file_sat,lons_sat{si}));
                lat_sat = double(ncread(file_sat,lats_sat{si}));
                vari_sat = double(squeeze(ncread(file_sat,varis_sat{si}))');
                %if si == 4
                if si == 3 || si == 4
                    index1 = find(lon_sat > 0); index2 = find(lon_sat < 0);
                    vari_sat = [vari_sat(:,index1) vari_sat(:,index2)];
                end
                lon_sat = lon_sat - lons_360ind(si);

                if isice == 1 && si == 5
                    aice_mask_sat = ncread(file_sat, 'sea_ice_fraction')';

                    aice_mask_sat(aice_mask_sat >= aice_value) = NaN;
                    aice_mask_sat(aice_mask_sat < aice_value) = 1;

                    vari_sat = vari_sat.*aice_mask_sat;
                end

                index_lon = find(lon_sat < max(max(lon))+1 & lon_sat > min(min(lon))-1);
                index_lat = find(lat_sat < max(max(lat))+1 & lat_sat > min(min(lat))-1);

                vari_sat_part = vari_sat(index_lat,index_lon);

                [lon_sat2, lat_sat2] = meshgrid(lon_sat(index_lon), lat_sat(index_lat));

                vari_sat_interp = griddata(lon_sat2, lat_sat2, vari_sat_part, lon,lat);
                mask_sat = ~isnan(vari_sat_interp);
                mask_sat_model = (mask_sat./mask_sat).*mask;
                area_sat = area.*mask_sat_model;
                vari_sat_shelf(si,12*(yi-1) + mi) = sum(vari_sat_interp(index_shelf).*area_sat(index_shelf), 'omitnan')./sum(area_sat(index_shelf), 'omitnan');
                vari_sat_basin(si,12*(yi-1) + mi) = sum(vari_sat_interp(index_basin).*area_sat(index_basin), 'omitnan')./sum(area_sat(index_basin), 'omitnan');
            end
        end
        disp([ystr, mstr, '...'])
    end % mi
end % yi

% Plot
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
h1 = figure; hold on; grid on;
set(gcf, 'Position', [1 1 1800 600])
% set(gcf, 'Position', [1 1 850 500])
t = tiledlayout(1,2);

%ttitle = annotation('textbox', [.44 .85 .1 .1], 'String', ['Area-averaged ', vari_str]);
%ttitle.FontSize = 25;
%ttitle.EdgeColor = 'None';

% Tile 1
nexttile(1); hold on; grid on
T1p1 = plot(timenum_all, vari_control_shelf, '-ok', 'LineWidth', 2);
for si = 1:num_sat
    T1ps(si) = plot(timenum_all, vari_sat_shelf(si,:), '-o', 'LineWidth', 2);
end
xticks(timenum_all);
xlim([timenum_all(7) timenum_all(end-1)])
datetick('x', 'mmm, yyyy', 'keepticks', 'keeplimits')
ylim(ylimit_shelf);
ylabel(unit)
title(['Eastern outer shelf area averaged (50 - ', num2str(depth_shelf), ' m)'])
%title(['Shelf area averaged (< ', num2str(depth_shelf), ' m)'])
l = legend([T1p1, T1ps], [['ROMS (', case_control, ')'], titles_sat], 'Interpreter', 'none');
l.NumColumns = 2;
l.Location = 'Northwest';
l.FontSize = 12;

% Tile 2
nexttile(2); hold on; grid on
T2p1 = plot(timenum_all, vari_control_basin, '-ok', 'LineWidth', 2);
for si = 1:num_sat
    T2ps(si) = plot(timenum_all, vari_sat_basin(si,:), '-o', 'LineWidth', 2);
end
xticks(timenum_all);
datetick('x', 'mmm, yyyy', 'keepticks')
ylim(ylimit_basin);
ylabel(unit)
title(['Basin area averaged (> ', num2str(depth_shelf), ' m)'])
%l = legend([T2p1, T2p2, T2ps], [case_control, case_exp, titles_sat], 'Interpreter', 'none');
%l.Location = 'SouthWest';
%l.FontSize = 15;

t.TileSpacing = 'compact';
t.Padding = 'compact';

title(t, 'Monthly SSS', 'FontSize', 25)

pause(1)
print(strcat('compare_area_averaged_', vari_str, '_with_Satellite_monthly'),'-dpng');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
timevec = datevec(timenum_all);
year_start = [2019 2019 2019 2019 2019 2019 2018 2018 2018 2018 2018 2018];
year_end = year_start+3;

for mi = 1:12
    for yi = year_start(mi):year_end(mi)
        index(yi-year_start(mi)+1,mi) = find(timevec(:,1) == yi & timevec(:,2) == mi);
    end

    vari_control_basin_mean(mi) = mean(vari_control_basin(index(:,mi)));
    vari_control_shelf_mean(mi) = mean(vari_control_shelf(index(:,mi)));

    for si = 1:num_sat
        vari_sat_basin_mean(si,mi) = mean(vari_sat_basin(si,index(:,mi)));
        vari_sat_shelf_mean(si,mi) = mean(vari_sat_shelf(si,index(:,mi)));
    end
end

h1 = figure; hold on; grid on;
set(gcf, 'Position', [1 1 1800 600])
t = tiledlayout(1,2);

% Tile 1
nexttile(1); hold on; grid on
T1p1 = plot(1:12, vari_control_shelf_mean, '-ok', 'LineWidth', 2);
for si = 1:num_sat
    T1ps(si) = plot(1:12, vari_sat_shelf_mean(si,:), '-o', 'LineWidth', 2);
end
xticks(1:12);
xlim([0 13])
xlabel('Month')
ylim(ylimit_shelf);
ylabel(unit)
title(['Eastern outer shelf area averaged (50 - ', num2str(depth_shelf), ' m)'])
l = legend([T1p1, T1ps], [['ROMS (', case_control, ')'], titles_sat], 'Interpreter', 'none');
l.NumColumns = 2;
l.Location = 'Northwest';
l.FontSize = 12;

% Tile 2
nexttile(2); hold on; grid on
T2p1 = plot(1:12, vari_control_basin_mean, '-ok', 'LineWidth', 2);
for si = 1:num_sat
    T2ps(si) = plot(1:12, vari_sat_basin_mean(si,:), '-o', 'LineWidth', 2);
end
xticks(1:12);
xlim([0 13])
xlabel('Month')
ylim(ylimit_basin);
ylabel(unit)
title(['Basin area averaged (> ', num2str(depth_shelf), ' m)'])
%l = legend([T2p1, T2p2, T2ps], [case_control, case_exp, titles_sat], 'Interpreter', 'none');
%l.Location = 'SouthWest';
%l.FontSize = 15;

t.TileSpacing = 'compact';
t.Padding = 'compact';

title(t, '4-year mean SSS', 'FontSize', 25)
print(strcat('compare_area_averaged_', vari_str, '_with_Satellite_4ymean'),'-dpng');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for ti = 1:length(timenum_all)
    month = timevec(ti,2);

    vari_control_basin_anomaly(ti) = vari_control_basin(ti) - vari_control_basin_mean(mi);
    vari_control_shelf_anomaly(ti) = vari_control_shelf(ti) - vari_control_shelf_mean(mi);

    vari_sat_basin_anomaly(:,ti) = vari_sat_basin(:,ti) - vari_sat_basin_mean(:,mi);
    vari_sat_shelf_anomaly(:,ti) = vari_sat_shelf(:,ti) - vari_sat_shelf_mean(:,mi);
end

h1 = figure; hold on; grid on;
set(gcf, 'Position', [1 1 1800 600])
t = tiledlayout(1,2);

% Tile 1
nexttile(1); hold on; grid on
T1p1 = plot(timenum_all, vari_control_shelf_anomaly, '-ok', 'LineWidth', 2);
for si = 1:num_sat
    T1ps(si) = plot(timenum_all, vari_sat_shelf_anomaly(si,:), '-o', 'LineWidth', 2);
end
xticks(timenum_all);
xlim([timenum_all(7) timenum_all(end-1)])
datetick('x', 'mmm, yyyy', 'keepticks', 'keeplimits')
ylim([-2 2]);
ylabel(unit)
title(['Eastern outer shelf area averaged (50 - ', num2str(depth_shelf), ' m)'])
%title(['Shelf area averaged (< ', num2str(depth_shelf), ' m)'])
l = legend([T1p1, T1ps], [['ROMS (', case_control, ')'], titles_sat], 'Interpreter', 'none');
l.NumColumns = 2;
l.Location = 'Northwest';
l.FontSize = 12;

% Tile 2
nexttile(2); hold on; grid on
T2p1 = plot(timenum_all, vari_control_basin_anomaly, '-ok', 'LineWidth', 2);
for si = 1:num_sat
    T2ps(si) = plot(timenum_all, vari_sat_basin_anomaly(si,:), '-o', 'LineWidth', 2);
end
xticks(timenum_all);
datetick('x', 'mmm, yyyy', 'keepticks')
ylim([-1 1]);
ylabel(unit)
title(['Basin area averaged (> ', num2str(depth_shelf), ' m)'])
%l = legend([T2p1, T2p2, T2ps], [case_control, case_exp, titles_sat], 'Interpreter', 'none');
%l.Location = 'SouthWest';
%l.FontSize = 15;

t.TileSpacing = 'compact';
t.Padding = 'compact';

title(t, 'SSS amomaly', 'FontSize', 25)

pause(1)
print(strcat('compare_area_averaged_', vari_str, '_with_Satellite_anomaly'),'-dpng');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
h1 = figure; hold on;
set(gcf, 'Position', [1 200 1500 750])
t = tiledlayout(2,3);

tindex = 1:12;

nexttile(1); hold on; grid on;
p(1) = plot(1:12, vari_control_shelf(tindex) - vari_sat_shelf_mean);
p(2) = plot(1:12, vari_control_shelf(tindex+12) - vari_sat_shelf_mean);
p(3) = plot(1:12, vari_control_shelf(tindex+24));
p(4) = plot(1:12, vari_control_shelf(tindex+36));
p(5) = plot(1:12, vari_control_shelf(tindex+48));
% plot(1:12, vari_control_shelf_mean, 'k');
xticks(1:12);
xlim([0 13])
xlabel('Month')
ylim(ylimit_shelf);
ylabel(unit)

l = legend(p, num2str(timevec(1:12:end,1)));
l.Location = 'NorthWest';
l.FontSize = 12;

title('ROMS Dsm2_spng', 'Interpreter', 'None')

for si = 1:num_sat
    nexttile(1+si); hold on; grid on
    plot(1:12, vari_sat_shelf(si,tindex));
    plot(1:12, vari_sat_shelf(si,tindex+12));
    plot(1:12, vari_sat_shelf(si,tindex+24));
    plot(1:12, vari_sat_shelf(si,tindex+36));
    plot(1:12, vari_sat_shelf(si,tindex+48));
%     plot(1:12, vari_sat_shelf_mean(si,:), 'k');
    xticks(1:12);
    xlim([0 13])
    xlabel('Month')
    ylim(ylimit_shelf);
    ylabel(unit)

    title(titles_sat{si}, 'Interpreter', 'None')
end

t.TileSpacing = 'compact';
t.Padding = 'compact';
title(t, ['Eastern outer shelf area averaged (50 - ', num2str(depth_shelf), ' m)'])

print(strcat('compare_area_averaged_', vari_str, '_with_Satellite_interannual_shelf'),'-dpng');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
h1 = figure; hold on;
set(gcf, 'Position', [1 200 1500 750])
t = tiledlayout(2,3);

tindex = 1:12;

nexttile(1); hold on; grid on;
p(1) = plot(1:12, vari_control_basin(tindex));
p(2) = plot(1:12, vari_control_basin(tindex+12));
p(3) = plot(1:12, vari_control_basin(tindex+24));
p(4) = plot(1:12, vari_control_basin(tindex+36));
p(5) = plot(1:12, vari_control_basin(tindex+48));
% plot(1:12, vari_control_basin_mean, 'k');
xticks(1:12);
xlim([0 13])
xlabel('Month')
ylim(ylimit_basin);
ylabel(unit)

title('ROMS Dsm2_spng', 'Interpreter', 'None')

for si = 1:num_sat
    nexttile(1+si); hold on; grid on
    plot(1:12, vari_sat_basin(si,tindex));
    plot(1:12, vari_sat_basin(si,tindex+12));
    plot(1:12, vari_sat_basin(si,tindex+24));
    plot(1:12, vari_sat_basin(si,tindex+36));
    plot(1:12, vari_sat_basin(si,tindex+48));
%     plot(1:12, vari_sat_basin_mean(si,:), 'k');
    xticks(1:12);
    xlim([0 13])
    xlabel('Month')
    ylim(ylimit_basin);
    ylabel(unit)

    title(titles_sat{si}, 'Interpreter', 'None')
end

t.TileSpacing = 'compact';
t.Padding = 'compact';
title(t, ['Basin area averaged (> ', num2str(depth_shelf), ' m)'])

print(strcat('compare_area_averaged_', vari_str, '_with_Satellite_interannual_shelf'),'-dpng');