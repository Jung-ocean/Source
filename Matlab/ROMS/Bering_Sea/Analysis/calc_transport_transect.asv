%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Calculated transport using the .mat file generated by Scott's mfile
%
% J. Jung
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear; clc; close all

region = 'Gulf_of_Anadyr';
title_str = strrep(region,'_',' ');

g = grd('BSf');

isstr = 1;

yyyy_all = 2019:2022;

trans = NaN(length(yyyy_all), 12);
timenum_all = NaN(length(yyyy_all), 12);
for yi = 1:length(yyyy_all)
    yyyy = yyyy_all(yi); ystr = num2str(yyyy);

    load([region, '_transect_ocean_vars_', ystr, '_monthly.mat']);

    timenum = timeR;
    mask = Seg.mask;
    mask2d = Seg.mask2d;
    azimuth = Seg.azimuth;
    lon = Seg.lonseca;
    lat = Seg.latseca;

    if yi == 4
        timenum_all(yi,1:end-1) = timenum;
    else
        timenum_all(yi,:) = timenum;
    end

    ds = Seg.ds; % km
    ds = ds.*1000; % m
    ds_2d = repmat(ds', [1, g.N]);

    h = Seg.depth;
    temp = Sec.temp;
    salt = Sec.salt;
    v_n = Sec.v_n;
    u_t = Sec.u_t;
    zeta = Sec.zeta;
    sustr = Sec.sustr;
    svstr = Sec.svstr;

    for ti = 1:length(timenum)
        depth = zlevs(-h,zeta(:,ti),g.theta_s,g.theta_b,g.hc,g.N,'r',2)';
        z_w = zlevs(-h,zeta(:,ti),g.theta_s,g.theta_b,g.hc,g.N,'w',2)';
        dz = z_w(:,2:end) - z_w(:,1:end-1);
        % z_w = Seg.zsecaw;
        % dz = z_w(:,2:end) - z_w(:,1:end-1);
        S = salt(:,:,ti);
        T = temp(:,:,ti);

        pres = sw_pres(depth, lat);
        pden = sw_pden_ROMS(S, T, pres, 0);

        % https://journals.ametsoc.org/view/journals/phoc/47/5/jpo-d-16-0210.1.xml?tab_body=fulltext-display
        % Volume transport
        v_n_tmp = v_n(:,:,ti);
        v_times_area =  v_n_tmp.*dz.*ds_2d.*mask;
        trans(yi, ti) = sum(v_times_area(:), 'omitnan');

        % Heat transport
        cp = sw_cp(S,T,pres); % J/kg/C
        T_time_area = pden.*cp.*T.*v_n_tmp.*dz.*ds_2d.*mask;
        Htrans(yi,ti) = sum(T_time_area(:), 'omitnan');

        % Salt transport
        load(['Sref_', region, '.mat']);
        index = find(timenum_ref == timenum(ti));
        Sref = Sref(index);

        S_time_area = pden.*(S-Sref).*v_n_tmp.*dz.*ds_2d.*mask;
        Strans(yi,ti) = sum(S_time_area(:), 'omitnan')*1e-3; % 1e-3: g/s to kg/s

        if isstr == 1
            str_n = sind(azimuth)'.*sustr(:,ti)  ...
                - cosd(azimuth)'.*svstr(:,ti);
            str_t = -cosd(azimuth)'.*sustr(:,ti)  ...
                - sind(azimuth)'.*svstr(:,ti);

            str_normal(yi,ti) = mean(str_n(:), 'omitnan');
        end
    end
end

% Plot heat transport
figure; hold on; grid on
set(gcf, 'Position', [1 200 800 500])
for yi = 1:length(yyyy_all)
    p(yi) = plot(1:12, Htrans(yi,:)/1e12, '-o', 'LineWidth', 2);
end
xticks([1:12])
xlim([0 13])
ylim([-20 40])
xlabel('Month')
ylabel('TW')
set(gca, 'FontSize', 15)
l = legend(p, '2019', '2020', '2021', '2022');
l.Location = 'NorthWest';
title(['Monthly heat transport (', title_str, ')'])

print(['heat_transport_', region], '-dpng')

% Plot salt transport
figure; hold on; grid on
set(gcf, 'Position', [1 200 800 500])
for yi = 1:length(yyyy_all)
    p(yi) = plot(1:12, Strans(yi,:)/1e6, '-o', 'LineWidth', 2);
end
xticks([1:12])
xlim([0 13])
% ylim([-90 90])
ylim([-1 1])
xlabel('Month')
ylabel('x10^6 kg/s')
set(gca, 'FontSize', 15)
l = legend(p, '2019', '2020', '2021', '2022');
l.Location = 'NorthWest';
title(['Monthly salt transport (', title_str, ')'])

print(['salt_transport_', region], '-dpng')

% Plot volume transport
figure; hold on; grid on
set(gcf, 'Position', [1 200 800 500])
for yi = 1:length(yyyy_all)
    p(yi) = plot(1:12, trans(yi,:)/1e6, '-o', 'LineWidth', 2);
end
xticks([1:12])
xlim([0 13])
ylim([-2.5 2.5])
xlabel('Month')
ylabel('Sv')
set(gca, 'FontSize', 15)
l = legend(p, '2019', '2020', '2021', '2022');
l.Location = 'SouthEast';
title(['Monthly volume transport (', title_str, ')'])

print(['transport_', region], '-dpng')

save(['transport_', region, '.mat'], 'trans', 'Htrans', 'Strans');

if isstr == 1
    clearvars('p')
    figure; hold on; grid on
    set(gcf, 'Position', [1 200 800 500])
    for yi = 1:length(yyyy_all)
        p(yi) = plot(1:12, str_normal(yi,:), '-o', 'LineWidth', 2);
    end
    xticks([1:12])
    xlim([0 13])
    ylim([-1.2 0.2])
    xlabel('Month')
    ylabel('N/m^2')

    set(gca, 'FontSize', 15)

    l = legend(p, '2019', '2020', '2021', '2022');
    l.Location = 'SouthEast';

    title(['Monthly stress (Along ', title_str, ')'])

    print(['str_normal_', region], '-dpng')
end